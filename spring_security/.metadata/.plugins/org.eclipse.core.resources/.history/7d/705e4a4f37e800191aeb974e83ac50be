package com.tech.security;

import java.util.LinkedHashMap;
import java.util.Map;

import org.springframework.security.oauth2.common.DefaultOAuth2AccessToken;
import org.springframework.security.oauth2.common.OAuth2AccessToken;
import org.springframework.security.oauth2.provider.OAuth2Authentication;
import org.springframework.security.oauth2.provider.token.store.JwtAccessTokenConverter;

import com.tech.security.model.CustomUserEntity;

public class CustomTokenEnhancer extends JwtAccessTokenConverter{

	
	@Override
	public OAuth2AccessToken enhance(OAuth2AccessToken accessToken, OAuth2Authentication authentication) {
		CustomUserEntity user = (CustomUserEntity) authentication.getPrincipal();
		Map<String,Object> info = new LinkedHashMap<>(accessToken.getAdditionalInformation());
		if(user.getId() != null)
			info.put("id", user.getId());
		if(user.getName() != null)
			info.put("name", user.getName());
		if(user.getUsername() != null)
			info.put("userName", user.getUsername());
		DefaultOAuth2AccessToken customToken = new DefaultOAuth2AccessToken(accessToken);
		customToken.setAdditionalInformation(info);
		return super.enhance(customToken, authentication);
	}
}
